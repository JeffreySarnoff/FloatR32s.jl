var documenterSearchIndex = {"docs":
[{"location":"howitworks/#How-It-Works","page":"How It Works","title":"How It Works","text":"","category":"section"},{"location":"howitworks/#The-Essential-Requirements","page":"How It Works","title":"The Essential Requirements","text":"","category":"section"},{"location":"howitworks/","page":"How It Works","title":"How It Works","text":"You are comfortable working with all input data as Float32s.\nYou are comfortable reporting all the results using Float32s.\nYou respect Robust32 values (just let them work, no peeking).","category":"page"},{"location":"howitworks/#The-Pervasive-Conventions","page":"How It Works","title":"The Pervasive Conventions","text":"","category":"section"},{"location":"howitworks/","page":"How It Works","title":"How It Works","text":"any information introduced to the computation is converted to Float32s.\nprogrammed calculations and computations are performed using Float64s.\nall information retrieved from the computation is converted to Float32s.","category":"page"},{"location":"howitworks/#Why-It-Works","page":"How It Works","title":"Why It Works","text":"","category":"section"},{"location":"howitworks/","page":"How It Works","title":"How It Works","text":"An old Rule-of-Thumb offers the simplest way to evade numerical embarrassment. Perform your compututations carrying somewhat more than twice the precision of your data and somewhat more than twice the precision of you seek in your results. This rule has long served statistics, optimization, root-finding, geometry, and differential equations. Rare exceptions exist, of course. (W. Kahan, amended)","category":"page"},{"location":"howitworks/","page":"How It Works","title":"How It Works","text":"This package implements that Rule-of-Thumb in a highly performant manner.  We work from Float32 data and provide Float32 results.  Float64s have 2x + 5 more significant bits than Float32s.  Internally, Float64 math is used. This happens automatically,  when you use the exported type[s]. So, all is well.","category":"page"},{"location":"#Robust32s.jl","page":"Overview","title":"Robust32s.jl","text":"","category":"section"},{"location":"#Increased-accuracy-using-Float32-data","page":"Overview","title":"Increased accuracy using Float32 data","text":"","category":"section"},{"location":"#Copyright-2020-by-Jeffrey-Sarnoff.-Released-under-the-MIT-License.","page":"Overview","title":"Copyright Â©2020 by Jeffrey Sarnoff.  Released under the MIT License.","text":"","category":"section"},{"location":"","page":"Overview","title":"Overview","text":"","category":"page"},{"location":"#https://jeffreysarnoff.github.io/Robust32s.jl/dev/","page":"Overview","title":"https://jeffreysarnoff.github.io/Robust32s.jl/dev/","text":"","category":"section"},{"location":"#How-To-Use-This-Package","page":"Overview","title":"How To Use This Package","text":"","category":"section"},{"location":"","page":"Overview","title":"Overview","text":"There are two exported types: Robust32 and ComplexR32.  Use them as you would Float32 and ComplexF32. It Just Works.","category":"page"},{"location":"#The-Only-Requirements","page":"Overview","title":"The Only Requirements","text":"","category":"section"},{"location":"","page":"Overview","title":"Overview","text":"You are comfortable working with your data as Float32s.\nYou are comfortable reporting your results as Float32s.","category":"page"},{"location":"#Bringing-in-data","page":"Overview","title":"Bringing in data","text":"","category":"section"},{"location":"","page":"Overview","title":"Overview","text":"Your raw data rawdata is stored as Ints or as Float32s or as Float64s or other Real type.","category":"page"},{"location":"","page":"Overview","title":"Overview","text":"data = Robust32.(rawdata);","category":"page"},{"location":"#Computing-on-the-data","page":"Overview","title":"Computing on the data","text":"","category":"section"},{"location":"","page":"Overview","title":"Overview","text":"Just do it.","category":"page"},{"location":"","page":"Overview","title":"Overview","text":"processed_data = your_computation(data)","category":"page"},{"location":"#Collecting-results","page":"Overview","title":"Collecting results","text":"","category":"section"},{"location":"","page":"Overview","title":"Overview","text":"Your processed data processed_data is stored as Robust32s. Report the results as Float32s.","category":"page"},{"location":"","page":"Overview","title":"Overview","text":"results = Float32.(processed_data);","category":"page"}]
}
